<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_26) on Wed Aug 29 10:51:11 CEST 2012 -->
<TITLE>
Recognizer
</TITLE>

<META NAME="date" CONTENT="2012-08-29">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Recognizer";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Recognizer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../org/recognizer/LinAlg.html" title="class in org.recognizer"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../org/recognizer/Searcher.html" title="class in org.recognizer"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?org/recognizer/Recognizer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Recognizer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.recognizer</FONT>
<BR>
Class Recognizer</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../resources/inherit.gif" ALT="extended by "><B>org.recognizer.Recognizer</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>Recognizer</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>pauline ruegg-reymond</DD>
</DL>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#Recognizer()">Recognizer</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;ij.process.ImageProcessor</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#binarize(ij.process.ImageProcessor)">binarize</A></B>(ij.process.ImageProcessor&nbsp;ip)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Transforms the image to black and white.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;ij.measure.ResultsTable</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#findBlob(ij.process.ImageProcessor, int)">findBlob</A></B>(ij.process.ImageProcessor&nbsp;ip,
         int&nbsp;minArea)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Finds and measures blobs on a binary image.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;ij.process.ImageProcessor</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#findRed(ij.process.ImageProcessor)">findRed</A></B>(ij.process.ImageProcessor&nbsp;ip)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Searches for red pixels.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;ij.ImageStack</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getCharacters(ij.process.ImageProcessor, ij.measure.ResultsTable, org.recognizer.TypeSpec, java.util.List)">getCharacters</A></B>(ij.process.ImageProcessor&nbsp;ip,
              ij.measure.ResultsTable&nbsp;blobs,
              <A HREF="../../org/recognizer/TypeSpec.html" title="class in org.recognizer">TypeSpec</A>&nbsp;type,
              java.util.List&lt;int[]&gt;&nbsp;order)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Separates out characters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;ij.process.ImageProcessor</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getDial(ij.process.ImageProcessor, ij.measure.ResultsTable, org.recognizer.TypeSpec)">getDial</A></B>(ij.process.ImageProcessor&nbsp;ip,
        ij.measure.ResultsTable&nbsp;blobs,
        <A HREF="../../org/recognizer/TypeSpec.html" title="class in org.recognizer">TypeSpec</A>&nbsp;type)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the number dial in a water meter picture.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getHUNDREDTH()">getHUNDREDTH</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getMIDDLE()">getMIDDLE</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getNumbers(org.encog.ml.data.MLDataSet, org.recognizer.TypeSpec, java.util.List)">getNumbers</A></B>(org.encog.ml.data.MLDataSet&nbsp;charsDataSet,
           <A HREF="../../org/recognizer/TypeSpec.html" title="class in org.recognizer">TypeSpec</A>&nbsp;type,
           java.util.List&lt;int[]&gt;&nbsp;order)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getTENTH()">getTENTH</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getTENTHOUSANDTH()">getTENTHOUSANDTH</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#getTHOUSANDTH()">getTHOUSANDTH</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;org.encog.ml.data.MLDataSet</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#imageStack2MLDataSet(ij.ImageStack)">imageStack2MLDataSet</A></B>(ij.ImageStack&nbsp;is)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Transforms an ImageStack into an MLDataSet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;int[]&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#preferredOrder(ij.measure.ResultsTable)">preferredOrder</A></B>(ij.measure.ResultsTable&nbsp;blobs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sorts blobs from left to right and groups them and sorts them form up to down if they are aligned vertically.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;ij.measure.ResultsTable</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../org/recognizer/Recognizer.html#treatBlobs(ij.process.ImageProcessor, ij.measure.ResultsTable)">treatBlobs</A></B>(ij.process.ImageProcessor&nbsp;ip,
           ij.measure.ResultsTable&nbsp;blobs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Identifies the blobs and finds their center.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="Recognizer()"><!-- --></A><H3>
Recognizer</H3>
<PRE>
public <B>Recognizer</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getMIDDLE()"><!-- --></A><H3>
getMIDDLE</H3>
<PRE>
public int <B>getMIDDLE</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTENTHOUSANDTH()"><!-- --></A><H3>
getTENTHOUSANDTH</H3>
<PRE>
public int <B>getTENTHOUSANDTH</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTENTH()"><!-- --></A><H3>
getTENTH</H3>
<PRE>
public int <B>getTENTH</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getTHOUSANDTH()"><!-- --></A><H3>
getTHOUSANDTH</H3>
<PRE>
public int <B>getTHOUSANDTH</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getHUNDREDTH()"><!-- --></A><H3>
getHUNDREDTH</H3>
<PRE>
public int <B>getHUNDREDTH</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="findRed(ij.process.ImageProcessor)"><!-- --></A><H3>
findRed</H3>
<PRE>
public ij.process.ImageProcessor <B>findRed</B>(ij.process.ImageProcessor&nbsp;ip)</PRE>
<DL>
<DD>Searches for red pixels.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ip</CODE> - - the image to process.
<DT><B>Returns:</B><DD>A binary image with red pixels set to 255 and non red ones to 0.</DL>
</DD>
</DL>
<HR>

<A NAME="findBlob(ij.process.ImageProcessor, int)"><!-- --></A><H3>
findBlob</H3>
<PRE>
public ij.measure.ResultsTable <B>findBlob</B>(ij.process.ImageProcessor&nbsp;ip,
                                        int&nbsp;minArea)</PRE>
<DL>
<DD>Finds and measures blobs on a binary image.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ip</CODE> - - the image to process.<DD><CODE>minArea</CODE> - - the minimal area a blob must have to be analyzed.
<DT><B>Returns:</B><DD>A table describing the blobs of the image. Measured properties are area, centroid and bounding box.</DL>
</DD>
</DL>
<HR>

<A NAME="treatBlobs(ij.process.ImageProcessor, ij.measure.ResultsTable)"><!-- --></A><H3>
treatBlobs</H3>
<PRE>
public ij.measure.ResultsTable <B>treatBlobs</B>(ij.process.ImageProcessor&nbsp;ip,
                                          ij.measure.ResultsTable&nbsp;blobs)</PRE>
<DL>
<DD>Identifies the blobs and finds their center.
 Attributes numbers from 0 to 4 to MIDDLE, TENTHOUSANDTH, TENTH, THOUSANDTH and HUNDREDTH. These numbers corresponds to the line of the
 blob in the ResultsTable.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ip</CODE> - - the image to process.<DD><CODE>blobs</CODE> - - table describing blobs of the image to process. Can be obtained unsing method findBlobs.
<DT><B>Returns:</B><DD>A table describing the blobs with two additional columns : X_CENTER_OF_MASS and Y_CENTER_OF_MASS. These columns store x and y coordinates
 of the center of the button.</DL>
</DD>
</DL>
<HR>

<A NAME="getDial(ij.process.ImageProcessor, ij.measure.ResultsTable, org.recognizer.TypeSpec)"><!-- --></A><H3>
getDial</H3>
<PRE>
public ij.process.ImageProcessor <B>getDial</B>(ij.process.ImageProcessor&nbsp;ip,
                                         ij.measure.ResultsTable&nbsp;blobs,
                                         <A HREF="../../org/recognizer/TypeSpec.html" title="class in org.recognizer">TypeSpec</A>&nbsp;type)</PRE>
<DL>
<DD>Gets the number dial in a water meter picture.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ip</CODE> - - the image to process.<DD><CODE>blobs</CODE> - - table containing data about some interest points. Can be obtained using method treatBlobs.
<DT><B>Returns:</B><DD>An image of size DIAL_WIDTH x DIAL_HEIGHT representing the number dial.</DL>
</DD>
</DL>
<HR>

<A NAME="binarize(ij.process.ImageProcessor)"><!-- --></A><H3>
binarize</H3>
<PRE>
public ij.process.ImageProcessor <B>binarize</B>(ij.process.ImageProcessor&nbsp;ip)</PRE>
<DL>
<DD>Transforms the image to black and white.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ip</CODE> - - the image to process.
<DT><B>Returns:</B><DD>An image in black and white.</DL>
</DD>
</DL>
<HR>

<A NAME="preferredOrder(ij.measure.ResultsTable)"><!-- --></A><H3>
preferredOrder</H3>
<PRE>
public java.util.List&lt;int[]&gt; <B>preferredOrder</B>(ij.measure.ResultsTable&nbsp;blobs)</PRE>
<DL>
<DD>Sorts blobs from left to right and groups them and sorts them form up to down if they are aligned vertically.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>blobs</CODE> - - blobs to sort.
<DT><B>Returns:</B><DD>A list of indices sorted in preferred order.</DL>
</DD>
</DL>
<HR>

<A NAME="getCharacters(ij.process.ImageProcessor, ij.measure.ResultsTable, org.recognizer.TypeSpec, java.util.List)"><!-- --></A><H3>
getCharacters</H3>
<PRE>
public ij.ImageStack <B>getCharacters</B>(ij.process.ImageProcessor&nbsp;ip,
                                   ij.measure.ResultsTable&nbsp;blobs,
                                   <A HREF="../../org/recognizer/TypeSpec.html" title="class in org.recognizer">TypeSpec</A>&nbsp;type,
                                   java.util.List&lt;int[]&gt;&nbsp;order)</PRE>
<DL>
<DD>Separates out characters.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>ip</CODE> - - image (preferably binary) containing a whole sentence or word.<DD><CODE>blobs</CODE> - - data about individual characters.
<DT><B>Returns:</B><DD>An array of images, each one contains a single character.</DL>
</DD>
</DL>
<HR>

<A NAME="imageStack2MLDataSet(ij.ImageStack)"><!-- --></A><H3>
imageStack2MLDataSet</H3>
<PRE>
public org.encog.ml.data.MLDataSet <B>imageStack2MLDataSet</B>(ij.ImageStack&nbsp;is)</PRE>
<DL>
<DD>Transforms an ImageStack into an MLDataSet. Each slice of the ImageStack becomes a distinct item of the MLDataSet.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>is</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="getNumbers(org.encog.ml.data.MLDataSet, org.recognizer.TypeSpec, java.util.List)"><!-- --></A><H3>
getNumbers</H3>
<PRE>
public int[] <B>getNumbers</B>(org.encog.ml.data.MLDataSet&nbsp;charsDataSet,
                        <A HREF="../../org/recognizer/TypeSpec.html" title="class in org.recognizer">TypeSpec</A>&nbsp;type,
                        java.util.List&lt;int[]&gt;&nbsp;order)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Recognizer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../org/recognizer/LinAlg.html" title="class in org.recognizer"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../org/recognizer/Searcher.html" title="class in org.recognizer"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?org/recognizer/Recognizer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Recognizer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
